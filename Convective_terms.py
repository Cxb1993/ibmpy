# -*- coding: utf-8 -*-
"""
Created on Wed Sep 09 11:29:31 2015

@author: Toshiba
"""

import numpy as np
 
  
def Adv_u(u,v,Xc,Y,UN,US):
 
  h1,h2 = np.zeros_like(u[:,1:-1]),np.zeros_like(u[:,1:-1])
  
  dx = np.diff(Xc)
  dy = -np.diff(Y,axis = 0)
  
  h1 = (((u[:,1:-1]+u[:,2:])/2.0)**2-((u[:,1:-1]+u[:,:-2])/2.0)**2)/dx

  h2[1:-1,:] = ((u[1:-1,1:-1]+u[2:,1:-1])/2.0*(v[2:-1,1:]+v[2:-1,:-1])/2.0   \
                 -(u[1:-1,1:-1]+u[:-2,1:-1])/2.0*(v[1:-2,1:]+v[1:-2,:-1])/2.0)/dy[1:-1,1:-1]

   
  h2[-1,:]   = (2*US/2.0*(v[-1,1:]+v[-1,0:-1])/2.0\
                  -(u[-1,1:-1]+u[-2,1:-1])/2.0*(v[-2,1:]+v[-2,:-1])/2.0)/dy[-1,1:-1]
                 
                  
  h2[0,:]    = ((u[0,1:-1]+u[1,1:-1])/2.0*(v[1,1:]+v[1,:-1])/2.0 \
                  -2*UN/2.0*(v[0,1:]+v[0,:-1])/2.0)/dy[0,1:-1]      

  Hu =  -h1+h2
  return Hu


def Adv_v(u,v,X,Yc,VE,VW):
    
  h1,h2 = np.zeros_like(v[1:-1,:]),np.zeros_like(v[1:-1,:])
  
  dy = -np.diff(Yc,axis = 0)
  dx = np.diff(X)
  
  h1    = (((v[1:-1,:]+v[2:,:])/2.0)**2-((v[1:-1,:]+v[:-2,:])/2.0)**2)/dy
                  
  
  h2[:,1:-1] = ((u[1:,2:-1]+u[:-1,2:-1])/2.0*(v[1:-1,1:-1]+v[1:-1,2:])/2.0\
                  -(u[1:,1:-2]+u[:-1,1:-2])/2.0*(v[1:-1,1:-1]+v[1:-1,:-2])/2.0)/dx[1:-1,1:-1]
 
  h2[:,0]    = ((u[1:,1]+u[:-1,1])/2.0*(v[1:-1,0]+v[1:-1,1])/2.0\
                  -(u[1:,0]+u[:-1,0])/2.0*(2*VW)/2.0)/dx[1:-1,0]

  h2[:,-1]   = ((u[1:,-1]+u[:-1,-1])/2.0*(2*VE)/2.0\
                  -(u[1:,-2]+u[:-1,-2])/2.0*(v[1:-1,-1]+v[1:-1,-2])/2.0)/dx[1:-1,-1]               
 
      
  Hv = h1-h2
  return Hv

